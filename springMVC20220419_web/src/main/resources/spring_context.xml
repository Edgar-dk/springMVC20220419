<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.1.xsd
  ">
    <context:annotation-config></context:annotation-config><!--使用注解配置-->
    <context:component-scan base-package="com.sias.*"></context:component-scan><!--配置包扫描，被扫描的包中类将被创建bean-->
    <import resource="spring_dataSource.xml"></import>
    <!--创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
        <!--
           mapper/**/*Mapper.xml
        -->
    </bean>

    <!--事务管理器-->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"></property>
     </bean>
    <!--告诉spring如何管理事务-->
    <aop:config >
        <aop:pointcut id="pointCut" expression="execution(* com.sias.springMVC_20220419MVC.service.*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="advice" pointcut-ref="pointCut" ></aop:advisor>
    </aop:config>

    <!--事务传播特性（告诉事务管理器，事务如何传播的【那些方法需要事务提交，事务如何管理】）-->
    <tx:advice id="advice" transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="save*" propagation="REQUIRED"/><!--REQUIRED 表示：原来有事务用原来的，没有开启新的事务，做有事务处理-->
           <tx:method name="update*" propagation="REQUIRED"/>
           <tx:method name="delete*" propagation="REQUIRED"/>
           <tx:method name="*" read-only="true"/><!--其他方法，事务是只读的-->
       </tx:attributes>
    </tx:advice>

    <!--配置Mybatis相关映射-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sias.springMVC_20220419MVC.dao"></property><!--扫描那些包下，那些接口进行mapper映射-->
        <property name="markerInterface" value="com.sias.springMVC_20220419MVC.dao.BaseDao"></property><!--只有该接口的子接口做映射-->
    </bean>



</beans>